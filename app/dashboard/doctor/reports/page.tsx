"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { FileText, Search, Download, Eye, Calendar, User, Filter } from "lucide-react"
import { DoctorBreadcrumb } from "@/components/doctor-breadcrumb"

// Mock data for reports generated by this doctor (Dr. Sarah Johnson - ID: D001)
const doctorReports = [
  {
    id: "RPT001",
    patientId: "P001",
    patientName: "John Smith",
    title: "Cardiology Assessment Report",
    description: "Comprehensive cardiac evaluation following chest pain episodes",
    fileUrl: "https://example.com/reports/rpt001.pdf",
    createdDate: "2024-12-20",
    status: "Completed",
    type: "Medical Assessment",
    priority: "High",
  },
  {
    id: "RPT002",
    patientId: "P002",
    patientName: "Maria Garcia",
    title: "Hypertension Management Report",
    description: "Blood pressure monitoring and medication adjustment recommendations",
    fileUrl: "https://example.com/reports/rpt002.pdf",
    createdDate: "2024-12-19",
    status: "Completed",
    type: "Follow-up",
    priority: "Medium",
  },
  {
    id: "RPT003",
    patientId: "P003",
    patientName: "Robert Johnson",
    title: "Post-Surgery Recovery Report",
    description: "Recovery progress assessment after cardiac procedure",
    fileUrl: "",
    createdDate: "2024-12-18",
    status: "Draft",
    type: "Post-Operative",
    priority: "High",
  },
  {
    id: "RPT004",
    patientId: "P004",
    patientName: "Emma Wilson",
    title: "Routine Cardiac Screening",
    description: "Annual cardiac health screening and risk assessment",
    fileUrl: "https://example.com/reports/rpt004.pdf",
    createdDate: "2024-12-17",
    status: "Completed",
    type: "Screening",
    priority: "Low",
  },
  {
    id: "RPT005",
    patientId: "P005",
    patientName: "David Brown",
    title: "ECG Analysis Report",
    description: "Electrocardiogram interpretation and findings",
    fileUrl: "https://example.com/reports/rpt005.pdf",
    createdDate: "2024-12-16",
    status: "Completed",
    type: "Diagnostic",
    priority: "Medium",
  },
  {
    id: "RPT006",
    patientId: "P001",
    patientName: "John Smith",
    title: "Treatment Response Evaluation",
    description: "Assessment of patient response to prescribed cardiac medications",
    fileUrl: "",
    createdDate: "2024-12-15",
    status: "In Progress",
    type: "Follow-up",
    priority: "Medium",
  },
]

export default function DoctorReports() {
  const [searchTerm, setSearchTerm] = useState("")
  const [statusFilter, setStatusFilter] = useState("all")
  const [typeFilter, setTypeFilter] = useState("all")
  const [priorityFilter, setPriorityFilter] = useState("all")

  // Filter reports based on search and filters
  const filteredReports = doctorReports.filter((report) => {
    const matchesSearch =
      report.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      report.patientName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      report.description.toLowerCase().includes(searchTerm.toLowerCase())

    const matchesStatus = statusFilter === "all" || report.status.toLowerCase() === statusFilter
    const matchesType = typeFilter === "all" || report.type.toLowerCase() === typeFilter.toLowerCase()
    const matchesPriority = priorityFilter === "all" || report.priority.toLowerCase() === priorityFilter

    return matchesSearch && matchesStatus && matchesType && matchesPriority
  })

  const getStatusColor = (status: string) => {
    switch (status.toLowerCase()) {
      case "completed":
        return "bg-green-100 text-green-800"
      case "in progress":
        return "bg-yellow-100 text-yellow-800"
      case "draft":
        return "bg-gray-100 text-gray-800"
      default:
        return "bg-blue-100 text-blue-800"
    }
  }

  const getPriorityColor = (priority: string) => {
    switch (priority.toLowerCase()) {
      case "high":
        return "bg-red-100 text-red-800"
      case "medium":
        return "bg-orange-100 text-orange-800"
      case "low":
        return "bg-green-100 text-green-800"
      default:
        return "bg-gray-100 text-gray-800"
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white border-b shadow-sm">
        <div className="px-4 lg:px-6 py-3 flex items-center justify-between">
          <div className="flex items-center space-x-3 lg:ml-0 ml-12">
            <div className="bg-green-600 p-2 rounded-lg">
              <FileText className="h-5 w-5 text-white" />
            </div>
            <div>
              <h1 className="text-lg font-semibold text-gray-900">My Reports</h1>
              <p className="text-xs text-gray-600">View and manage reports you've created</p>
            </div>
          </div>
          <div className="flex items-center space-x-3">
            <Badge variant="secondary" className="bg-green-100 text-green-800">
              Dr. Sarah Johnson (ID: D001)
            </Badge>
          </div>
        </div>
      </header>

      {/* Breadcrumb */}
      <DoctorBreadcrumb />

      <div className="p-4 lg:p-6">
        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-xs font-medium">Total Reports</CardTitle>
              <FileText className="h-3 w-3 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-xl font-bold">{doctorReports.length}</div>
              <p className="text-xs text-muted-foreground">All time</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-xs font-medium">Completed</CardTitle>
              <div className="h-3 w-3 bg-green-500 rounded-full" />
            </CardHeader>
            <CardContent>
              <div className="text-xl font-bold text-green-600">
                {doctorReports.filter((r) => r.status === "Completed").length}
              </div>
              <p className="text-xs text-muted-foreground">Ready for review</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-xs font-medium">In Progress</CardTitle>
              <div className="h-3 w-3 bg-yellow-500 rounded-full" />
            </CardHeader>
            <CardContent>
              <div className="text-xl font-bold text-yellow-600">
                {doctorReports.filter((r) => r.status === "In Progress" || r.status === "Draft").length}
              </div>
              <p className="text-xs text-muted-foreground">Pending completion</p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-xs font-medium">This Week</CardTitle>
              <Calendar className="h-3 w-3 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-xl font-bold">4</div>
              <p className="text-xs text-muted-foreground">Reports created</p>
            </CardContent>
          </Card>
        </div>

        {/* Filters and Search */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="text-sm flex items-center">
              <Filter className="h-4 w-4 mr-2" />
              Filter Reports
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
                <Input
                  placeholder="Search reports, patients..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10"
                />
              </div>

              <Select value={statusFilter} onValueChange={setStatusFilter}>
                <SelectTrigger>
                  <SelectValue placeholder="Filter by status" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">All Status</SelectItem>
                  <SelectItem value="completed">Completed</SelectItem>
                  <SelectItem value="in progress">In Progress</SelectItem>
                  <SelectItem value="draft">Draft</SelectItem>
                </SelectContent>
              </Select>

              <Select value={typeFilter} onValueChange={setTypeFilter}>
                <SelectTrigger>
                  <SelectValue placeholder="Filter by type" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">All Types</SelectItem>
                  <SelectItem value="medical assessment">Medical Assessment</SelectItem>
                  <SelectItem value="follow-up">Follow-up</SelectItem>
                  <SelectItem value="diagnostic">Diagnostic</SelectItem>
                  <SelectItem value="screening">Screening</SelectItem>
                  <SelectItem value="post-operative">Post-Operative</SelectItem>
                </SelectContent>
              </Select>

              <Select value={priorityFilter} onValueChange={setPriorityFilter}>
                <SelectTrigger>
                  <SelectValue placeholder="Filter by priority" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">All Priorities</SelectItem>
                  <SelectItem value="high">High Priority</SelectItem>
                  <SelectItem value="medium">Medium Priority</SelectItem>
                  <SelectItem value="low">Low Priority</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </CardContent>
        </Card>

        {/* Reports List */}
        <Card>
          <CardHeader>
            <CardTitle className="text-sm flex items-center justify-between">
              My Reports
              <Badge variant="secondary" className="text-xs">
                {filteredReports.length} reports
              </Badge>
            </CardTitle>
            <CardDescription className="text-xs">Reports you have created for your patients</CardDescription>
          </CardHeader>
          <CardContent>
            {filteredReports.length === 0 ? (
              <div className="text-center py-8">
                <FileText className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                <h3 className="text-sm font-medium text-gray-900 mb-2">No reports found</h3>
                <p className="text-xs text-gray-600">
                  {searchTerm || statusFilter !== "all" || typeFilter !== "all" || priorityFilter !== "all"
                    ? "Try adjusting your search or filters"
                    : "You haven't created any reports yet"}
                </p>
              </div>
            ) : (
              <div className="space-y-4">
                {filteredReports.map((report) => (
                  <div key={report.id} className="border rounded-lg p-4 hover:shadow-md transition-shadow">
                    <div className="flex items-start justify-between mb-3">
                      <div className="flex-1">
                        <div className="flex items-center space-x-2 mb-2">
                          <h3 className="font-medium text-sm text-gray-900">{report.title}</h3>
                          <Badge className={`text-xs ${getStatusColor(report.status)}`}>{report.status}</Badge>
                          <Badge variant="outline" className={`text-xs ${getPriorityColor(report.priority)}`}>
                            {report.priority}
                          </Badge>
                        </div>
                        <p className="text-xs text-gray-600 mb-2">{report.description}</p>
                        <div className="flex items-center space-x-4 text-xs text-gray-500">
                          <span className="flex items-center">
                            <User className="h-3 w-3 mr-1" />
                            {report.patientName} (ID: {report.patientId})
                          </span>
                          <span className="flex items-center">
                            <Calendar className="h-3 w-3 mr-1" />
                            {new Date(report.createdDate).toLocaleDateString()}
                          </span>
                          <Badge variant="outline" className="text-xs">
                            {report.type}
                          </Badge>
                        </div>
                      </div>
                    </div>

                    <div className="flex items-center justify-between pt-3 border-t">
                      <div className="text-xs text-gray-500">Report ID: {report.id}</div>
                      <div className="flex items-center space-x-2">
                        <Button size="sm" variant="outline" className="text-xs h-7">
                          <Eye className="h-3 w-3 mr-1" />
                          View Details
                        </Button>
                        {report.fileUrl && (
                          <Button size="sm" variant="outline" className="text-xs h-7">
                            <Download className="h-3 w-3 mr-1" />
                            Download
                          </Button>
                        )}
                        {report.status === "Draft" && (
                          <Button size="sm" className="bg-green-600 hover:bg-green-700 text-xs h-7">
                            <FileText className="h-3 w-3 mr-1" />
                            Continue Editing
                          </Button>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
